{"version":3,"sources":["routes/Home.js","routes/FileUpload.js","routes/MaterialSelect.js","routes/Progress.js","csrftoken.js","components/FileUpload.js","components/MaterialSelect.js","routes/Print.js","components/SideBarHeader.js","App.js","serviceWorker.js","index.js"],"names":["Home","console","log","Component","defaultProps","printStatus","Status","state","material","intervalID","startTime","timeSec","timeMin","progress","tick","currentDuration","Date","getTime","currentDate","setState","getSeconds","getMinutes","this","ws","WebSocket","window","location","hostname","onopen","onmessage","evt","message","JSON","parse","data","method","onOff","setInterval","clearInterval","onclose","axios","get","then","response","satet","close","defaults","xsrfCookieName","xsrfHeaderName","CSRFToken","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","replace","substring","decodeURIComponent","getCookie","type","value","FileUpload","selectedFile","handleFilePost","formData","FormData","append","post","res","props","onFileUploaded","catch","err","alert","e","target","files","accept","onChange","handleFileInput","onClick","Print","materialList","materialChange","event","handleMaterialPost","str","onMaterialSelected","disabled","map","index","key","selectedMaterial","selected","activeStep","steps","socketName","handleNext","handlePrint","history","push","handleReset","handleFileUpload","file","list","forEach","item","array","includes","isCustomResin","handleMaterialSelected","step","Typography","code","onerror","classes","className","root","Stepper","orientation","label","Step","StepLabel","StepContent","getStepContent","actionsContainer","Button","variant","color","button","withStyles","theme","width","marginTop","spacing","marginRight","marginBottom","resetContainer","padding","useStyles","makeStyles","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","SideBarHeader","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","paragraph","Divider","List","ListItem","component","Link","to","ListItemIcon","ListItemText","primary","container","undefined","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","App","posts","exact","path","Progress","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d5d188a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Home extends Component {\n\tstatic defaultProps = {\n\t\tprintStatus : ''\n\t}\n\n\tnextButtonClicked(){\n\t\tconsole.log(\"NextButtonClicked\")\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\thome\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass FileUpload extends Component {\n\n\tstate = {\n\t\tselectedFile: null,\n\t}\n\n\thandleFileInput(e){\n\t\tthis.setState({\n\t\t\tselectedFile : e.target.files[0],\n\t\t})\n\t}\n\n\thandlePost = () => {\n\n\t\tlet formData = new FormData();\n\t\t//console.log(this.state.selectedFile)\n\t\tif(this.state.selectedFile === null){\n\t\t\talert('file select required')\n\t\t\treturn\n\t\t}\n\t\tformData.append('file', this.state.selectedFile);\n\n\t\taxios.post(\"/api/upload/\", formData).then(res => {\n\t\t\talert('sucess')\n\t\t\treturn this.props.history.push('/MaterialSelect');\n\t\t}).catch(err => {\n\t\t\talert('file upload fail')\n\t\t\tconsole.log(err)\n\t\t})\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<button>\n\t\t\t\t\t\tPREVIOUS\n\t\t\t\t\t</button>\n\t\t\t\t</Link>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"file\" name=\"file\" onChange=\n\t\t\t\t\t{e => this.handleFileInput(e)}/>\n\t\t\t\t\t<button type=\"button\" onClick={this.handlePost}>upload </button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tFileUpload\n\t\t\t\t</div>\n\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FileUpload;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass MaterialSelect extends Component {\n\n\tstate = {\n\t\tmaterial: '',\n\t\tmaterialList: [],\n\t}\n\n\tcomponentDidMount(){\n\t\taxios.get('/api/materialList')\n\t\t.then(response =>{\n\t\t\tthis.setState({\n\t\t\t\tmaterial: response.data.materialList[0],\n\t\t\t\tmaterialList: response.data.materialList\n\t\t\t})\n\t\t})\n\t}\n\n\tmaterialChange = (event) => {\n\t\tthis.setState({\n\t\t\tmaterial: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <Link to=\"/FileUpload\">\n                    <button>\n                        PREVIOUS\n                    </button>\n                </Link>\n\t\t\t\t\n\t\t\t\t<select value={this.state.material} onChange={this.materialChange}>\n\t\t\t\t{this.state.materialList.map((material) => {\n\t\t\t\t\treturn <option value={material}>{material}</option>\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<Link to=\"/Status\">\n\t\t\t\t\t<button>\n\t\t\t\t\t\tprint\n\t\t\t\t\t</button>\n\t\t\t\t</Link>\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.material}\n\t\t\t\t\tMaterialSelect\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MaterialSelect;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst URL = ':8000/ws/progress'\n\nclass Status extends Component {\n\n\tstate = {\n\t\tmaterial: '',\n\t\tintervalID: null,\n\t\tstartTime: 0,\n\n\t\tstate: 'ready',\n\t\ttimeSec: 0,\n\t\ttimeMin: 0,\n\t\tprogress: 0,\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.ws = new WebSocket('ws://' + window.location.hostname + URL)\n\t\t\n\t\tthis.ws.onopen = () => {\n\t\t\tconsole.log('connected')\t\n\t\t}\n\t\tthis.ws.onmessage = evt => {\n\t\t\tconst message = JSON.parse(evt.data)\n\t\t\tif(message.method === \"start\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstate: \"print\",\n\t\t\t\t\ttimeSec: 0,\n\t\t\t\t\ttimeMin: 0\n\t\t\t\t})\n\t\t\t}else if(message.method === \"setTimerOnoff\"){\n\t\t\t\tif(message.onOff === false){\n\t\t\t\t\tvar intervalId = setInterval(this.tick, 100);\n\t\t\t\t}else if(message.onOff === true){\n\t\t\t\t\tclearInterval(this.state.intervalID);\n\t\t\t\t}\n\t\t\t}else if(message.method === \"setTimerTime\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstartTime: message.startTime,\n\t\t\t\t})\n\t\t\t}else if(message.method === \"pause\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstate: \"pause\"\n\t\t\t\t})\n\t\t\t}else if(message.method === \"finish\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstate: \"ready\"\n\t\t\t\t})\n\t\t\t}else if(message.method === \"resume\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tstate: \"print\"\n\t\t\t\t})\n\t\t\t}else if(message.method === \"update\"){\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogress: message.progress\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.ws.onclose = () => {\n\t\t\tconsole.log(\"disconnected\")\n\t\t}\n\t\taxios.get('/api/state')\n        .then(response => {\n\t\t\tthis.setState({\n\t\t\t\tsatet: response.data.state\n\t\t\t})\n        })\n\n\t\tconsole.log(new Date().getTime())\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.ws.close()\n\t}\n\t\n\ttick = () => {\n\t\tvar date = new Date()\n\t\tvar currentDuration = date.getTime() - this.state.startTime\n\t\tvar currentDate = new Date(currentDuration)\n\n\t\tthis.setState({\n\t\t\ttimeSec: currentDate.getSeconds(),\n\t\t\ttimeMin: currentDate.getMinutes()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t모델명 : C-10<br/>\n\t\t\t\t펌웨어 버전 : 1.0.0<br/>\n\t\t\t\t제조사 : HiX<br/>\n\t\t\t\t시리얼 넘버 : C103d20200611-A01<br/>\n\t\t\t{/*<div>\n\t\t\t\tstate : {this.state.state}<br/>\n\t\t\t\ttime : {this.state.timeMin}min {this.state.timeSec}sec<br/>\n\t\t\t\tprogress : {this.state.progress}%\n\t\t\t</div>*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Status;\n","import axios from 'axios';\nimport React from 'react';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].replace(' ', '');\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\nconst CSRFToken = () => {\n    const csrftoken = getCookie('csrftoken');\n    return(\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken}/>\n    )\n};\n\nexport default CSRFToken \n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CSRFToken from '../csrftoken';\n\nclass FileUpload extends Component {\n\n\tstate = {\n\t\tselectedFile: null,\n\t}\n\tcomponentDidMount(){\n\t\taxios.get('/api/get_csrf/')\n\t}\n\thandleFileInput(e){\n\t\tconsole.log(e.target.value)\n\t\tthis.setState({\n\t\t\tselectedFile : e.target.files[0],\n\t\t})\n\t}\n\thandleFilePost = () => {\n\t\tlet formData = new FormData();\n\t\tif(this.state.selectedFile === null){\n\t\t\talert('file select required')\n\t\t\treturn\n\t\t}\n\t\tformData.append('file', this.state.selectedFile);\n\t\taxios.post(\"/api/file/upload/\", formData).then(res => {\n\t\t\tthis.props.onFileUploaded(this.state.selectedFile)\t\n\t\t}).catch(err => {\n\t\t\talert('file upload fail')\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CSRFToken />\n\t\t\t\t<input type=\"file\" name=\"file\" accept=\".zip\" onChange=\n\t\t\t\t{e => this.handleFileInput(e)}/>\n\t\t\t\t<button type=\"button\" onClick={this.handleFilePost}>\n\t\t\t\t\tfile select\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FileUpload;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CSRFToken from '../csrftoken';\n\nclass Print extends Component {\n\n\tstate = {\n\t\tmaterial: 'Choose here',\n\t\tmaterialList: [\"-------------------------\"],\n\t}\n\n\tcomponentDidMount(){\n\t\taxios.get('/api/get_csrf/')\n\t\tif(this.props.material === null){\n\t\t\treturn\n\t\t}\n\t\tthis.setState({\n\t\t\tmaterial: this.props.material\n\t\t})\n\t}\n\n\tmaterialChange = (event) => {\n\t\tthis.setState({\n\t\t\tmaterial: event.target.value\t\n\t\t})\n\t}\n\n\thandleMaterialPost = () => {\n\t\tvar str = \"/api/material/\" + this.state.material + \"/select/\" \n\t\tif(this.state.material === 'Choose here'){\n\t\t\talert('material select required')\n\t\t\treturn\t\n\t\t}\n\t\taxios.post(str).then(res => {\n\t\t\tthis.props.onMaterialSelected(this.state.material)\n\t\t}).catch(err => {\n\t\t\talert('material select fail')\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CSRFToken />\n\t\t\t\t<select value={this.state.material} onChange={this.materialChange}>\n\t\t\t\t\t<option disabled>Choose here</option>\n\t\t\t\t\t{this.props.materialList.map((material,index) => {\n\t\t\t\t\t\treturn <option key={index}>{material}</option>\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t\t<button type=\"button\" onClick={this.handleMaterialPost}>\n\t\t\t\t\tmaterial select\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Print;\n","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport axios from 'axios';\n\nimport FileUpload from '../components/FileUpload';\nimport MaterialSelect from '../components/MaterialSelect';\n\nconst styles = (theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tactionsContainer: {\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tresetContainer: {\n\t\tpadding: theme.spacing(3),\n\t},\n});\n\nclass Print extends Component {\n\n\tstate = {\n\t\tselectedFile: {\n\t\t\tname: \"\"\n\t\t},\n\t\tselectedMaterial: null,\n\t\tselected: [true,true],\n\t\tmaterialList: [\"--------------------\"],\n\t\tactiveStep: 0,\n\t\tsteps: ['Select Print File', 'Choose Material', 'Print'],\n\t\tsocketName: \"\",\n\t}\n\tgetStepContent(step) {\n\t\tswitch (step) {\n\t\t\tcase 0:\n\t\t\t\treturn <FileUpload onFileUploaded={this.handleFileUpload}/>\n\t\t\tcase 1:\n\t\t\t\treturn <MaterialSelect materialList={this.state.materialList} material={this.state.selectedMaterial} onMaterialSelected={this.handleMaterialSelected}/>\n\t\t\tcase 2:\n\t\t\t\treturn (<Typography>\n\t\t\t\t\t\tfile name :  {this.state.selectedFile.name} <br/>\n\t\t\t\t\t\tmaterial :  {this.state.selectedMaterial}\n\t\t\t\t\t\t</Typography>);\n\t\t\tdefault:\n\t\t\t\treturn \"no more step\";\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tthis.ws = new WebSocket('ws://' + window.location.hostname + ':8000/ws/setting')\n\n\t\tthis.ws.onopen = () => { console.log('connected') }\n\t\tthis.ws.onclose = (event) => { \n\t\t\tif(event.code === 4100){\n\t\t\t\tthis.props.history.push('/')\n\t\t\t\talert('timeout')\n\t\t\t}\n\t\t}\n\t\tthis.ws.onerror = () => {\n\t\t\tthis.props.history.push('/')\n\t\t\talert('can not access this page')\n\t\t}\n\t\tthis.ws.onmessage = (evt) => {\n\t\t\tconst message = JSON.parse(evt.data)\n\t\t\tthis.setState({\n\t\t\t\tsocketName: message.name\n\t\t\t})\n\t\t}\n\t}\n\tcomponentWillUnmount(){\n\t\tthis.ws.close()\n\t}\n\thandleNext = () => {\n\t\tthis.setState({\tactiveStep: this.state.activeStep + 1 })\n\t}\n\thandlePrint = () => {\n\t\taxios.post(\"/api/start/\").then(res => {\n\t\t\tthis.props.history.push('/progress/')\n\t\t\talert('sucess')\n\t\t}).catch(err => {\n\t\t\talert('print fail')\n\t\t})\n\t}\n\thandleReset = () => {\n\t\tthis.setState({\tactiveStep: 0 })\n\t}\n\thandleFileUpload = (file) => {\n\t\tthis.setState({\n\t\t\tselectedFile: file,\n\t\t\tselected: [false, true]\n\t\t})\n\t\taxios.get('/api/material/')\n\t\t.then(response => {\n\t\t\tvar list=[]\n\t\t\tresponse.data.forEach((item,index,array)=> {\n\t\t\t\tlist.push(item[\"M_id\"])\n\t\t\t})\n\t\t\tif(list.includes('custom_resin')){\n\t\t\t\tthis.setState({\n\t\t\t\t\tisCustomResin: true\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tthis.setState({\n\t\t\t\t\tisCustomResin: false\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tmaterialList: list,\n\t\t\t})\n\t\t})\n\t}\n\thandleMaterialSelected = (material) => {\n\t\tthis.setState({\n\t\t\tselectedMaterial: material,\n\t\t\tselected: [true, false]\n\t\t})\n\t}\n\trender() {\n\t\tconst {classes} = this.props;\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n\t\t\t\t{this.state.steps.map((label, index) => (\n\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t{this.getStepContent(index)}\n\t\t\t\t\t\t\t<div className={classes.actionsContainer}>\n\t\t\t\t\t\t\t\t{this.state.activeStep !== this.state.steps.length - 1\n\t\t\t\t\t\t\t\t&&\t(<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t\tdisabled={this.state.selected[index]}\n\t\t\t\t\t\t\t\t\tclassName={classes.button}>\n\t\t\t\t\t\t\t\t\tNext </Button>)} \n\t\t\t\t\t\t\t\t{this.state.activeStep === this.state.steps.length - 1\n\t\t\t\t\t\t\t\t&& (<Button\n\t\t\t\t\t\t\t\t\tonClick={this.handleReset}\n\t\t\t\t\t\t\t\t\tclassName={classes.button}> Reset \n\t\t\t\t\t\t\t\t</Button>)}\n\t\t\t\t\t\t\t\t{this.state.activeStep === this.state.steps.length - 1\n\t\t\t\t\t\t\t\t&& (<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={this.handlePrint}\n\t\t\t\t\t\t\t\t\tclassName={classes.button}> Print \n\t\t\t\t\t\t\t\t</Button>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t</Step>\n\t\t\t\t))}\n\t\t\t\t</Stepper>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Print);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction SideBarHeader(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography paragraph>\n\t\t</Typography>\n      </div>\n      <Divider />\n      <List>\n          <ListItem button component={Link} to=\"/\">\n            <ListItemIcon> <HomeRoundedIcon/> </ListItemIcon>\n            <ListItemText primary=\"home\"/>\n          </ListItem>\n          {/*<ListItem button component={Link} to=\"/print\">\n            <ListItemIcon> <PlayArrowRoundedIcon/> </ListItemIcon>\n            <ListItemText primary=\"print\"/>\n          </ListItem>\n          <ListItem button component={Link} to=\"/progress\">\n            <ListItemIcon> <UpdateRoundedIcon/> </ListItemIcon>\n            <ListItemText primary=\"progress\"/>\n          </ListItem>*/}\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          \tC-10\t\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\" open>\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n      \t\t{props.children}\n\t\t</main>\n    </div>\n  );\n}\n\nSideBarHeader.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default SideBarHeader;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home, FileUpload, MaterialSelect, Progress, Print } from './routes';\nimport Test from './routes/Test';\nimport SideBarHeader from './components/SideBarHeader';\n\nclass App extends Component {\n\t\n\tstate = {\n\t\tposts:[],\n\t}\n\t\n\tcomponentDidMount() {\n\t\taxios.get('/api/state')\n\t\t.then(response => {\n\t\t\tif(response.data.state !== \"ready\"){\n\t\t\t\treturn this.props.history.push('/Status')\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\t\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t<SideBarHeader>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Progress} />\n\t\t\t\t\t\t\t{/*<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t\t<Route path=\"/progress\" component={Progress} />\n\t\t\t\t\t\t\t<Route path=\"/print\" component={Print} />\n\t\t\t\t\t\t\t<Route path=\"/file\" component={FileUpload} />\n\t\t\t\t\t\t\t<Route path=\"/file/material\" component={MaterialSelect} />\n\t\t\t\t\t\t\t<Route path=\"/test\" Component={Test} />*/}\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</SideBarHeader>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//import configureStre from './store/configureStroe';\n//import createHistory from 'history/createBrowserHistory';\n//import { Router, Route } from 'react-router-dom';\n\n//const store = configureStore();\n\nReactDOM.render(\n//\t<Provider store={store}>\n//\t\t<Router history={createHistory()}>\n\t\t\t<React.StrictMode>\n\t\t\t\t<App />\n\t\t\t</React.StrictMode>\n//\t\t</Router>\n//\t</Provider>\n\t,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}